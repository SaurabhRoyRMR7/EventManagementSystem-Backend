[
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "CreateEvent",
    "RelativePath": "api/Event",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createEventDTO",
        "Type": "EventManagementAPI.DTO.CreateEventDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementAPI.DTO.EventDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "DeleteEvent",
    "RelativePath": "api/Event/{action}/{eventId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "action",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "CheckUserRegistration",
    "RelativePath": "api/Event/{eventId}/is-registered/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "RegisterForEvent",
    "RelativePath": "api/Event/{eventId}/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "registrationDTO",
        "Type": "EventManagementAPI.DTO.EventRegistrationDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "UnregisterFromEvent",
    "RelativePath": "api/Event/{eventId}/unregister",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "unregistrationDTO",
        "Type": "EventManagementAPI.DTO.EventUnRegistrationDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetEvent",
    "RelativePath": "api/Event/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementAPI.DTO.EventDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "TogglePublishEvent",
    "RelativePath": "api/Event/{id}/publish",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetEvents",
    "RelativePath": "api/Event/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventManagementAPI.Models.Event, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetRegisteredEvents",
    "RelativePath": "api/Event/GetRegisteredEvents/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventManagementAPI.DTO.EventDTO, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetEventsByOrganizer",
    "RelativePath": "api/Event/organizer/{userId}/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetEventParticipants",
    "RelativePath": "api/Event/participants/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.EventController",
    "Method": "GetUpcomingEvents",
    "RelativePath": "api/Event/upcoming",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventManagementAPI.DTO.EventDTO, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventRegistrationFormController",
    "Method": "AddRegistrationFormField",
    "RelativePath": "api/EventRegistrationForm",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fieldDTO",
        "Type": "EventManagementAPI.DTO.EventRegistrationFormsFieldDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementAPI.DTO.EventRegistrationFormsFieldDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventRegistrationFormController",
    "Method": "GetEventRegistrationFormFields",
    "RelativePath": "api/EventRegistrationForm/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventManagementAPI.DTO.EventRegistrationFormsFieldDTO, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementAPI.DTO.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDTO",
        "Type": "EventManagementAPI.DTO.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "GetOrganizerIdByUserId",
    "RelativePath": "api/User/organizerId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "RegisterUser",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registrationDTO",
        "Type": "EventManagementAPI.DTO.UserRegistrationDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementAPI.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "UpdateUserRole",
    "RelativePath": "api/User/user/{action}/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserRoleDTO",
        "Type": "EventManagementAPI.DTO.UpdateUserRoleDTO",
        "IsRequired": true
      },
      {
        "Name": "action",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/users/{action}/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "action",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_3TierEventManagement.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[_3TierEventManagement.WeatherForecast, 3TierEventManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]